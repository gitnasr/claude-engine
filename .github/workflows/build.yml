name: Build and Deploy Claude Server

on:
  push:
    branches:
      - claude-engine  
  workflow_dispatch:  

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9 

      - name: Create requirements.txt (if missing)
        shell: pwsh
        run: |
          if (-not (Test-Path requirements.txt)) {
            pip freeze > requirements.txt
          }

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller
      - name: Install uvicorn
        run: pip install uvicorn

      - name: Build exe
        run: |
          pyinstaller --onefile --distpath ./dist --name "Claude Server.exe" main.py

      - name: Create zip file
        shell: pwsh
        id: version
        run: |
          $VERSION = git describe --tags --always
          7z a "Claude Server-$VERSION.zip" ./dist/"Claude Server.exe"
          echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload zip file
        uses: actions/upload-artifact@v4
        with:
          name: Claude-Server-${{ env.VERSION }}.zip
          path: "Claude Server-${{ env.VERSION }}.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: true
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Claude Server-${{ env.VERSION }}.zip
          asset_name: Claude-Server-${{ env.VERSION }}.zip
          asset_content_type: application/zip